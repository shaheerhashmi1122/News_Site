: // <GuestLayout>// <Head title="Log in" />// {status && <div className="mb-4 font-medium text-sm text-green-600">{status}</div>}// <form onSubmit={submit}>// <div>// <InputLabel htmlhtmlFor="email" value="Email" />// <TextInput// id="email"// type="email"// name="email"// value={data.email}// className="mt-1 block w-full"// autoComplete="username"// isFocused={true}// onChange={(e) => setData('email', e.target.value)}// />// <Input Error message={errors.email} className="mt-2" />// </div>// <div className="mt-4">// <InputLabel htmlhtmlFor="password" value="Password" />// <TextInput// id="password"// type="password"// name="password"// value={data.password}// className="mt-1 block w-full"// autoComplete="current-password"// onChange={(e) => setData('password', e.target.value)}// />// <InputError message={errors.password} className="mt-2" />// </div>// <div className="block mt-4">// <label className="flex items-center">// <input// type="checkbox"// name="remember"// checked={data.remember}// onChange={(e) => setData('remember', e.target.checked)}// className="mr-2"// />// <span className="text-sm text-gray-600">Remember me</span>// </label>// </div>// <div className="flex items-center justify-end mt4">// {comResetPassword && (// <Link// href={route('password.request')}// className="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"// >// Forgot your password?// </Link>// )}// <PrimaryButton className="ml-4" disabled={processing}>// Log in// </PrimaryButton>// </div>// </form>// </GuestLayout>








 {/* <AuthenticatedLayout
                user={auth.user}
                header={
                    <h2 className="font-semibold text-xl bg-secondary heading h-10 py-2 px-16 text-light leading-tight">
                        Dashboard
                    </h2>
                }
            >
                <Head title="Dashboard" />

                <Revenue />
                <div className="py-3  ">
                    <div className=" sm:px-6 lg:px-8">
                        <MainPage />
                    </div>
                </div>
            </AuthenticatedLayout> */}


                {/* <div className="min-h-screen  main-body bg-white">
                <div className="flex">
                    <AuthorSidebar user={user.name} show={showMobileSidebar} onClose={toggleMobileSidebar} />

                    <div className="flex-1 min-h-screen content">
                        <nav className="bg-secondary border-b border-gray-100">
                            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                                <div className="flex justify between h-16">
                                    <button
                                        type="button"
                                        className="btn btn-square btn-dark m-2"
                                        onClick={() => setShowMobileSidebar(!showMobileSidebar)}
                                    >
                                        <i className="fa fa-bars"></i>
                                    </button>
                                    <a href="#" className="sidebar-toggler flex-shrink-0"></a>
                                    <div className="flex">
                                        <div className="shrink-0 flex  items-center">
                                            <div className="ml-3 relative">
                                                <Dropdown>
                                                    <Dropdown.Trigger>
                                                        <span className="inline-flex rounded-md">
                                                            <button
                                                                type="button"
                                                                className="inline-flex items-center px-3 py-2  border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-secondary hover:text-red-700 focus:outline-none transition ease-in-out duration-150"
                                                            >
                                                                {user.name}
                                                                <svg
                                                                    className="ml-2 -mr-0.5 h-4 w-4"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                    viewBox="0 0 20 20"
                                                                    fill="currentColor"
                                                                >
                                                                    <path
                                                                        fillRule="evenodd"
                                                                        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                                                                        clipRule="evenodd"
                                                                    ></path>
                                                                </svg>
                                                            </button>
                                                        </span>
                                                    </Dropdown.Trigger>
                                                    <Dropdown.Content>
                                                        <Dropdown.Link href={route("profile.edit")}>
                                                            Profile
                                                        </Dropdown.Link>
                                                        <Dropdown.Link
                                                            href={route("logout")}
                                                            method="post"
                                                            as="button"
                                                        >
                                                            Log Out
                                                        </Dropdown.Link>
                                                    </Dropdown.Content>
                                                </Dropdown>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </nav>

                        {header && (
                            <header className="bg-white shadow">
                                <div className="dash">{header}</div>
                            </header>
                        )}
                        <main>{children}</main>
                    </div>
                </div>
            </div>

        }
        */






























































        import React, { useState } from "react";
import "../../../css/Admin/app.css";

export default function SideBar() {
    const [activeLink, setActiveLink] = useState("");

    const handleClick = (route) => {
        console.log("Link clicked:", route);
        setActiveLink(route);
    };

    const routes = [
        { route: "/admin/dashboard", icon: " fa-home", name: "Home" },
        { route: "/admin/tables", icon: " fa-laptop", name: "Tables" },
        { route: "/admin/charts", icon: " fa-chart-bar", name: "Analytics" },
    ];

    return (
        <>
            <aside
                className="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3 "
                id="sidenav-main"
            >
                <div className="sidenav-header">
                    <div className="navbar-brand m-0">
                        <span className="ms-1 font-weight-bold">
                            Globe-Link
                        </span>
                    </div>
                </div>
                <hr className="horizontal dark mt-0" />
                <div
                    className="collapse navbar-collapse  w-auto  max-height-vh-100 h-100"
                    id="sidenav-collapse-main"
                >
                    <ul className="navbar-nav">
                        {routes.map((link, index) => (
                            <li
                                className={`nav-item ${
                                    link.route === activeLink ? "active" : ""
                                }`}
                                key={index}
                            >
                                <a
                                    className={`nav-link ${
                                        link.route === activeLink
                                            ? "active-link"
                                            : ""
                                    }`}
                                    href={link.route}
                                    onClick={() => handleClick(link.route)}
                                >
                                    <div className="icon icon-shape icon-sm shadow border-radius-md bg-white text-center me-2 d-flex align-items-center justify-content-center gradient-purple">
                                        <i
                                            className={`text-dark fs-7 fa ${link.icon}`}
                                        ></i>
                                    </div>
                                    <span className="nav-link-text ms-1">
                                        {link.name}
                                    </span>
                                </a>
                            </li>
                        ))}
                    </ul>
                </div>
            </aside>
        </>
    );
}
